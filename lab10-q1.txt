`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 04/13/2023 02:43:42 PM
// Design Name: 
// Module Name: clock_divider
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////
module clock_divider (
    input mclk,
    output [15:0] led
);

// Counter to divide the clock
//2^26 = 67,108,864
reg [32:0] counter; // A 27-bit wide counter can count up to 134,217,728 2^27

// Divide clock and set LED output
reg led_half_sec;

always @(posedge mclk) begin
    if (counter ==  (50_000_000 - 1)) begin
        counter <=0;
        led_half_sec = ~led_half_sec; // Toggle half-second output
    end
    else begin
        counter <= counter + 1;
    end
end

assign led[0] = led_half_sec;

endmodule
