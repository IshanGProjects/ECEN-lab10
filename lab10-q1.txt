module clock_divider (
    input wire mclk // ,
    output wire clk_1Hz,
    output wire [15:0] led
);

// Counter to divide the clock
//2^26 = 67,108,864
reg [26:0] counter; // A 27-bit wide counter can count up to 134,217,728 2^27
wire counter_max = counter == 100000000 - 1; // When the counter reaches the max we can the alter
wire counter_half = counter == 50000000 - 1; // When the counter reaches this value, it will toggle the half-second mark

// Divide clock and set LED output
reg div_clk;
reg led_half_sec;

always @(posedge clk_100MHz) begin
    if (counter_max) begin
        counter <= 0;
        div_clk <= ~div_clk; // Toggle the div clock
    end
    else if (counter_half) begin
        led_half_sec <= ~led_half_sec; // Toggle half-second output
    end
    else begin
        counter <= counter + 1;
    end
end

assign clk_1Hz = div_clk;
assign led[0] = led_half_sec;

endmodule
